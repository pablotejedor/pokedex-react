{"version":3,"sources":["components/Pokemon.jsx","helpers/fetchPokemons.js","helpers/getPokemons.jsx","components/PokeContainer.jsx","Pokedex.jsx","index.js"],"names":["Pokemon","pokemon","colors","fire","grass","electric","water","ground","rock","fairy","poison","bug","dragon","psychic","flying","fighting","normal","steel","ghost","ice","dark","gradient","backgroundImage","types","length","className","style","src","img","alt","name","id","toUpperCase","slice","type","fetchPokemons","a","url","fetch","result","json","getPokemons","rangeOfPokemons","promises","i","push","Promise","all","pokemons","mappedPokemons","map","poke","sprites","front_default","join","PokeContainer","useState","setPokemons","loading","setloading","useEffect","then","Pokedex","setRangeOfPokemons","nextHandler","value","previousHandler","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8db3a5f0.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Pokemon = ({ pokemon }) => {\n  //obtiene un arreglo con los tipos de cada pokemon\n  // console.log(pokemon.types.map(types => types.type.name))\n  // console.log(pokemon.types);\n  const colors = {\n    fire: '#F05030',\n    grass: '#78C850',\n    electric: '#F8D030',\n    water: '#3899F8',\n    ground: '#E9D6A4',\n    rock: '#B8A058',\n    fairy: '#E79FE7',\n    poison: '#B058A0',\n    bug: '#A8B820',\n    dragon: '#7860E0',\n    psychic: '#F870A0',\n    flying: '#98A8F0',\n    fighting: '#A05038',\n    normal: '#A8A090',\n    steel: '#A8A8C0',\n    ghost: '#6060B0',\n    ice: '#58C8E0',\n    dark: '#7A5848',\n  };\n\n  const gradient = {\n    backgroundImage: `linear-gradient(315deg, ${\n      colors[pokemon.types[pokemon.types.length - 1]]\n    } 0%, ${colors[pokemon.types[0]]} 75%)`,\n  };\n  return (\n    <div className=\"poke-card\" style={gradient}>\n      <img src={pokemon.img} alt={pokemon.name} />\n      <p>#{pokemon.id}</p>\n      <h4>{pokemon.name[0].toUpperCase() + pokemon.name.slice(1)}</h4>\n      <p>Type: {pokemon.type}</p>\n    </div>\n  );\n};\n","export const fetchPokemons = async id => {\n    const url = `https://pokeapi.co/api/v2/pokemon/${id}`;\n    const result = await fetch(url);\n    const pokemon = await result.json();\n    return pokemon;\n  };","import { fetchPokemons } from './fetchPokemons';\nexport const getPokemons = async rangeOfPokemons => {\n  const promises = [];\n  for (let i = rangeOfPokemons[0]; i <= rangeOfPokemons[1]; i++) {\n    promises.push(fetchPokemons(i));\n  }\n  let pokemons = await Promise.all(promises);\n  let mappedPokemons = pokemons.map(poke => {\n    return {\n      img: poke.sprites.front_default,\n      name: poke.name,\n      id: poke.id,\n      type: poke.types\n        .map(\n          types => types.type.name[0].toUpperCase() + types.type.name.slice(1)\n        )\n        .join(', '),\n      types: poke.types.map(types => types.type.name),\n    };\n  });\n\n  return mappedPokemons;\n\n  // let pokemons = [];\n  // for (let i = rangeOfPokemons[0]; i <= rangeOfPokemons[1]; i++) {\n  //   const url = `https://pokeapi.co/api/v2/pokemon/${i}`;\n  //   const result = await fetch(url);\n  //   const pokemon = await result.json();\n  //   pokemons.push(pokemon);\n  // }\n  // return pokemons.map(poke => {\n  //   return {\n  //     img: poke.sprites.front_default,\n  //     name: poke.name,\n  //     id: poke.id,\n  //     type: poke.types\n  //       .map(\n  //         types =>\n  //           types.type.name[0].toUpperCase() + types.type.name.slice(1)\n  //       )\n  //       .join(', '),\n  //     types: poke.types.map(types => types.type.name),\n  //   };\n  // });\n};\n","import React, { useState, useEffect } from 'react';\nimport { Pokemon } from './Pokemon';\nimport { getPokemons } from '../helpers/getPokemons';\nexport const PokeContainer = ({ rangeOfPokemons }) => {\n  const [pokemons, setPokemons] = useState([]);\n  const [loading, setloading] = useState(true);\n  useEffect(() => {\n    getPokemons(rangeOfPokemons).then(poke => {\n      setPokemons(poke);\n      setloading(false);\n    });\n  }, [rangeOfPokemons]);\n\n  useEffect(() => {\n    setloading(true);\n  }, [rangeOfPokemons]);\n\n  return (\n    <>\n      {loading ? <p>Loading...</p> :\n      <div className=\"poke-container\">\n        {pokemons.map(poke => (\n          <Pokemon pokemon={poke} key={poke.id} />\n        ))}\n      </div>\n        }\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { PokeContainer } from './components/PokeContainer';\n\nexport const Pokedex = () => {\n  const [rangeOfPokemons, setRangeOfPokemons] = useState([1, 30]);\n  const rangeVariation = 30;\n\n  const nextHandler = () => {\n    if (rangeOfPokemons[1] + rangeVariation > 891) {\n      setRangeOfPokemons([\n        (rangeOfPokemons[0] = 862),\n        rangeOfPokemons[1] + (891 - rangeOfPokemons[1]),\n      ]);\n    } else {\n      setRangeOfPokemons(rangeOfPokemons.map(value => value + rangeVariation));\n    }\n  };\n\n  const previousHandler = () => {\n    if (rangeOfPokemons[0] < 30) {\n      return;\n    } else {\n      setRangeOfPokemons(rangeOfPokemons.map(value => value - rangeVariation));\n    }\n  };\n\n  return (\n    <>\n      <h1>Pokedex</h1>\n      <h3>Gotta catch' em all!</h3>\n      <div className=\"buttons-container\">\n        <button onClick={previousHandler}>Previous</button>\n        <button onClick={nextHandler}>Next</button>\n      </div>\n      <PokeContainer rangeOfPokemons={rangeOfPokemons} />\n      <div className=\"buttons-container\">\n        <button onClick={previousHandler}>Previous</button>\n        <button onClick={nextHandler}>Next</button>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Pokedex } from './Pokedex';\n\n\n\nReactDOM.render(\n  <Pokedex />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}